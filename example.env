# Environment-based settings; copy this file to .env and edit as needed

# Run the site in debug mode
# https://docs.djangoproject.com/en/3.0/ref/settings/#debug
#DEBUG=FALSE

# Space separated list of Host domains to accept
# https://docs.djangoproject.com/en/3.0/ref/settings/#allowed-hosts
#ALLOWED_HOSTS="eosidp.example.com"

# Secret key for signing. This is required to be set when not in debug mode.
# To generate a new one, run the following:
# python3 -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
# https://docs.djangoproject.com/en/3.0/ref/settings/#secret-key
#SECRET_KEY=""

# Comma separated list of email addresses to send error messages to
# https://docs.djangoproject.com/en/3.0/ref/settings/#admins
#ADMINS="webmaster@example.com"

# Email configuration
# https://docs.djangoproject.com/en/3.0/topics/email/
#SERVER_EMAIL=eosidp@example.com
#DEFAULT_FROM_EMAIL=noreply@example.com
#EMAIL_HOST=smtp.example.com
#EMAIL_PORT=25
#EMAIL_HOST_USER=""
#EMAIL_HOST_PASSWORD=""
#EMAIL_USE_TLS=FALSE
#EMAIL_USE_SSL=FALSE

# Log level configuration. LOG_LEVEL is used for logging from eos-idp
# while ROOT_LOG_LEVEL controls the global log level from other loggers
# such as django.
# https://docs.python.org/3/library/logging.html#logging-levels
#LOG_LEVEL=INFO
#ROOT_LOG_LEVEL=WARNING

# Site ID. This should be 1 unless there are multiple sites registered.
# https://docs.djangoproject.com/en/3.0/ref/settings/#site-id
#SITE_ID=1

# Google authentication. GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET are
# then OAuth2 client ID and secret, respectively.
# https://support.google.com/googleapi/answer/6158849
#GOOGLE_CLIENT_ID=""
#GOOGLE_CLIENT_SECRET=""
